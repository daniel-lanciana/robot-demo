var search_data = {"index":{"searchIndex":["applicationcontroller","applicationhelper","array","robot","robotadapter","robotcontroller","table","index()","input()","left()","length()","move()","new()","next_elem_infinite()","place()","prev_elem_infinite()","report()","right()","application.js","application.css"],"longSearchIndex":["applicationcontroller","applicationhelper","array","robot","robotadapter","robotcontroller","table","robotcontroller#index()","robotadapter#input()","robot#left()","table::length()","robot#move()","robotadapter::new()","array#next_elem_infinite()","robot#place()","array#prev_elem_infinite()","robot#report()","robot#right()","",""],"info":[["ApplicationController","","ApplicationController.html","",""],["ApplicationHelper","","ApplicationHelper.html","",""],["Array","","Array.html","","<p>Monkey patch Array class to traverse the array infinitely (when reaches the\nend goes back to the start) …\n"],["Robot","","Robot.html","","<p>Object representing the robot on the tabletop. States are placement\n(boolean), x pos, y pos and direction …\n"],["DemoProcessor","","DemoProcessor.html","","<p>From the raw input performs validation and calls the relevant Robot\nmethods. Adapter pattern.\n"],["RobotController","","RobotController.html","","<p>Web application access to the adapter class\n"],["Table","","Table.html","","<p>For mixin with Robot class (does not make sense for Robot to extend Table\n-&gt; Robot &#39;is not&#39; …\n"],["index","RobotController","RobotController.html#method-i-index","()",""],["input","DemoProcessor","DemoProcessor.html#method-i-input","(input)","<p>Validates and parses the input, calls relevant Robot methods\n"],["left","Robot","Robot.html#method-i-left","()","<p>If on the table, rotate the robot 90 degrees left\n"],["length","Table","Table.html#method-c-length","()",""],["move","Robot","Robot.html#method-i-move","()","<p>If on the table, move the robot forward one position\n"],["new","DemoProcessor","DemoProcessor.html#method-c-new","(*args)","<p>On initialisation, create a new Robot object\n"],["next_elem_infinite","Array","Array.html#method-i-next_elem_infinite","(item)","<p>Returns the next element in the array. If the last element returns the\nfirst element (loops).\n"],["place","Robot","Robot.html#method-i-place","(pos_x, pos_y, facing)","<p>Place the robot on the table (if valid x, y positions)\n"],["prev_elem_infinite","Array","Array.html#method-i-prev_elem_infinite","(item)","<p>Returns the previous element in the array. If the first element returns the\nlast element (loops).\n"],["report","Robot","Robot.html#method-i-report","()","<p>If on the table, report the robot&#39;s position and direction – otherwise\nreturn an error message\n"],["right","Robot","Robot.html#method-i-right","()","<p>If on the table, rotate the robot 90 degrees right\n"],["application.js","","assets/javascripts/application_js.html","","<p>// This is a manifest file that&#39;ll be compiled into application.js,\nwhich will include all the files …\n"],["application.css","","assets/stylesheets/application_css.html","","\n<pre>This is a manifest file that&#39;ll be compiled into application.css, which will include all the files\nlisted ...</pre>\n"]]}}